(function(){var n={}.hasOwnProperty;this.DocumentUploader=function(){function t(t){var i,r;this.opts=t!=null?t:{};for(i in t)n.call(t,i)&&(r=t[i],this[i]=r);console.log(this.Manager,"Manager");this.UploadWrapper=$("<div />").addClass("docUploader");this.Identifier=$(this.Wrapper).attr("id");this.isSimple=$(this.Wrapper).data("simple");this.UploadInput=$("<input/>").attr("type","file");this.UploadBtn=$("<button />").addClass("buttonGreen small").text("Upload Document");this.isSimple||(this.$complexWrapper=$.el("table",{"class":"wthtop20",width:"99%","margin-left":"5px"}).append($.el("tr",{}).append($.el("td",{"class":"txtalgnrgt"}).append($.el("label",{"class":"input-label required"}).text("Document Name : ")),$.el("td",{}).append($.el("input",{type:"text",name:this.Identifier+"_docName",id:this.Identifier+"_docName"})),$.el("td",{"class":"txtalgnrgt"}).append($.el("label",{"class":"input-label required"}).text("Document Type : ")),$.el("td",{}).append($.el("select",{name:this.Identifier+"_docType",id:this.Identifier+"_docType"}).append($.el("option",{selected:"selected",value:0}).text("Select Type")))),$.el("tr",{}).append($.el("td",{"class":"txtalgnrgt"}).append($.el("label",{"class":"input-label required"}).text("Document : ")),$.el("td",{}).append(this.UploadInput),$.el("td",{"class":""}).append(this.UploadBtn),$.el("td",{}))),console.log(this.$complexWrapper));this.init(this)}return t.p=t.prototype,t.p.Manager,t.p.Wrapper,t.p.UploadWrapper,t.p.UploadInput,t.p.UploadBtn,t.p.Identifier,t.p.init=function(n){var t,u,i,r,f,o,e;if(this.self=n,u=$(this.Wrapper),t=$(this.UploadWrapper),$(this.UploadInput).attr("id",this.Identifier+"_input"),$(this.UploadBtn).click({input:this.UploadInput,uplWrapper:this.UploadWrapper},function(n){return new FileUploader("Upload",null,n.data.input,n.data.uplWrapper)}),$(this.UploadWrapper).attr("id",this.Identifier+"_Uploader"),this.isSimple?(t.append(this.UploadInput),t.append(this.UploadBtn)):t.append(this.$complexWrapper),u.append(this.UploadWrapper),this.Manager.loadAllDocument(u.data("docid")),this.docTypes=this.Manager.DocumentTypeNames["doc_"+$(this.Wrapper).data("docid")],this.docTypes!=null)for(console.log(this.docTypes),e=this.docTypes,i=f=0,o=e.length;f<o;i=++f)r=e[i],console.log(r,"Value",i,"Key"),this.$complexWrapper.find("#"+this.Identifier+"_docType").first().append($.el("option",{}).val(r.DocumentTypeId).text(r.DocumentTypeIdName))},t}()}).call(this);