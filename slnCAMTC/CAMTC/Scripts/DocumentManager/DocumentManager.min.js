(function(){var n={}.hasOwnProperty;this.DocumentManager=function(){function t(t){var i,r;this.opts=t!=null?t:{};for(i in t)n.call(t,i)&&(r=t[i],this[i]=r);this.CurrentInstance=this;this.DocumentTypeNames=[];ShowLoader();this.init()}return t.p=t.prototype,t.p.ApiBaseUrl="http://ws.camtc.inlumon.com/",t.p.ApplicationId="",t.p.ProviderId="",t.p.ApiSaveEndpoint="",t.p.ApiDeleteEndpoint="",t.p.ApiGetDocumentsEndpoint="",t.p.UploadUrl="School/Certification/Upload",t.p.Key="",t.p.UserId="",t.p.DocumentUploader={},t.p.DocumentContainerBuilder,t.p.ApplicationDocuments=[],t.p.DocumentTypeNames=[],t.p.DocumentWrapperClass="documentContainer",t.p.CurrentInstance={},t.p.init=function(){var n;n=this.CurrentInstance;this.UserId=sessionStorage.School_UserId;$("."+this.DocumentWrapperClass).each(function(){var i,t,u,r;t=$(this).data("docid");i=$(this).data("docCode");u=$(this).data("simple");r=this;n.DocumentTypeNames["doc_"+t]==null?n.loadDocTypeName(t,i).success(function(i){return i.Status&&(n.DocumentTypeNames["doc_"+t]=i.DocumentMasterGET,console.log(n.DocumentTypeNames["doc_"+t],"Success")),n.addUploader(r)}):n.addUploader(this)});HideLoader()},t.p.loadAllDocument=function(n){var t;return t=this.CurrentInstance,$.ajax({url:t.ApiBaseUrl+t.ApiGetDocumentsEndpoint+t.Key,type:"GET",data:{ProviderId:t.ProviderId,ApplicationId:t.ApplicationId,DocumentId:n}})},t.p.loadDocTypeName=function(n,t){var i;return i=this,$.ajax({url:i.ApiBaseUrl+"api/Document/DocumentGetDocumentTypeName/"+i.Key,type:"GET",data:{DocId:n,DocCode:t}})},t.p.removeDocument=function(n){var t;return t=this,$.ajax({url:t.ApiBaseUrl+t.ApiDeleteEndpoint+t.Key+"?ProviderDocId="+n.ProviderDocumentId+"&UserId="+t.UserId+"&ProviderId="+t.ProviderId+"&ApplicationId="+t.ApplicationId,type:"POST"})},t.p.getDocTypeNames=function(n){var t,u,r,i;r=this.ApplicationDocuments;i=[];for(t in r)u=r[t],t==="doc_"+n?i.push(this.CurrentInstance.DocumentTypeNames[t]):i.push(void 0);return i},t.p.addUploader=function(n){if(this.checkWrapper(n.id)==null)return this.ApplicationDocuments[n.id]={Wrapper:n,Uploader:new DocumentUploader({Manager:this.CurrentInstance,Wrapper:n})}},t.p.getAllWrapper=function(){var n,i,t;this.ApplicationDocuments;t=this.ApplicationDocuments;for(n in t)i=t[n],console.log(this.CurrentInstance.ApplicationDocuments[n])},t.p.checkWrapper=function(n){return this.CurrentInstance.ApplicationDocuments[n]},t.p.refresh=function(){$("."+this.DocumentWrapperClass).each(function(){return _self.addUploader(this)})},t}()}).call(this);