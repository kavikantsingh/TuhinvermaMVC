// Generated by IcedCoffeeScript 108.0.11
(function() {
  this['FileUploader'] = (function() {
    var fu, _self;

    fu = _Class.prototype;

    _self = self;

    fu.thisObj = "";

    function _Class(url, successCallback, FileInput, uploadWrapper, progressContainer) {
      var thisObj;
      this.url = url;
      this.successCallback = successCallback;
      this.FileInput = FileInput;
      this.uploadWrapper = uploadWrapper;
      this.progressContainer = progressContainer != null ? progressContainer : "#ProgressContainer";
      this.fileInput = null;
      thisObj = this;
      console.log(this.FileInput);
      this.request = new XMLHttpRequest();
      this.request.onreadystatechange = function() {
        var e, resp;
        if (this.readyState === 4) {
          console.log("state Changed to 4");
          try {
            resp = JSON.parse(this.response);
            console.log(resp);
          } catch (_error) {
            e = _error;
            resp = {
              status: 'error',
              data: 'Unknown error occurred: [' + this.responseText + ']'
            };
            console.log(resp);
          }
          if (resp.status === "success") {
            thisObj.processReadystate(resp);
          }
        }
      };
      this.fileData = new FormData();
      console.log(this.FileInput[0].files[0]);
      this.fileData.append('file', this.FileInput[0].files[0]);
      this.fileInput = this.FileInput;
      console.log("reached input");
      this.upload();
      return;
    }

    fu.request = null;

    fu.url = "";

    fu['fileData'] = null;

    fu.successCallback = null;

    fu.upload = function() {
      var progressCont;
      console.log("Uploading File");
      progressCont = $(this.progressContainer).show();
      this.request.upload.addEventListener('progress', function(e) {
        var percent;
        percent = Math.round((e.loaded / e.total) * 100);
        return progressCont.find("span.UploadProgress").first().text(percent + "%");
      }, false);
      this.request.open('POST', this.url);
      this.request.send(this.fileData);
    };

    fu.processReadystate = function(response) {
      if (this.successCallback && typeof this.successCallback === "function") {
        console.log("callback");
        this.successCallback(response);
      }
    };

    return _Class;

  })();

}).call(this);
