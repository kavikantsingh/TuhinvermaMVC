// Generated by IcedCoffeeScript 108.0.11
(function() {
  var __hasProp = {}.hasOwnProperty;

  this['SectionManager'] = (function() {
    var vm;

    vm = _Class.prototype;

    vm['ulElement'] = "";

    vm['sectionWrapper'] = "";

    vm['listItemActiveClass'] = "";

    vm['sectionState'] = {};

    function _Class(opts) {
      var k, v;
      if (opts == null) {
        opts = {};
      }
      for (k in opts) {
        if (!__hasProp.call(opts, k)) continue;
        v = opts[k];
        this[k] = v;
      }
      this.iam = this;
      this.sectionState = {};
      this.initSections(this.iam);
      this.hideLoading();
    }

    vm.getListElement = function() {
      return this.iam['ulElement'];
    };

    vm.initSections = function(obj) {
      $(this.ulElement + " li").each(function() {
        if ($(this).hasClass("initial")) {
          obj.changeSelection(this);
        }
        $(this).click(function() {
          obj.changeSelection(this);
        });
      });
    };

    vm.bindEvent = function(evt, func) {};

    vm.changeSelection = function(item) {
      var loadingSectionId;
      this.showLoading();
      loadingSectionId = $(item).data("section");
      if (!this.sectionState[loadingSectionId]) {
        this.loadSection(loadingSectionId, this);
      } else {
        this.updateSection(this, this.sectionState[loadingSectionId].element);
      }
      this.unSelectOther(this);
      $(item).addClass(this.listItemActiveClass);
    };

    vm.validateSelection = function(item) {};

    vm.unSelectOther = function(obj) {
      $(obj.ulElement + " li." + obj.listItemActiveClass).each(function() {
        $(this).removeClass(obj.listItemActiveClass);
      });
    };

    vm.updateSection = function(obj, item) {
      $(obj.sectionWrapper + " .activeSection").each(function() {
        $(this).css('display', 'none');
        return $(this).removeClass("activeSection");
      });
      $(item).addClass("activeSection");
      return $(item).css('display', 'block');
    };

    vm.getSelf = function() {
      return this;
    };

    vm.showLoading = function() {
      ShowLoader();
    };

    vm.hideLoading = function() {
      HideLoader();
    };

    vm.loadSection = function(id, obj) {
      console.log(id, obj, !obj.sectionState && !obj.sectionState[id]);
      if (!obj.sectionState[id]) {
        $.ajax({
          url: "LoadSection/" + id,
          type: "GET",
          success: function(data) {
            var el, elid;
            el = $("<div />");
            elid = id + "_wrapper";
            $(el).attr('id', elid);
            $(el).append(data);
            obj.sectionState[id] = {
              loaded: true,
              element: el
            };
            $(obj.sectionWrapper).append(el);
            obj.updateSection(obj, el);
            console.log(DefaultDocumentManager);
            DefaultDocumentManager.init();
            obj.hideLoading();
          }
        });
      }
    };

    return _Class;

  })();

}).call(this);
